- set_title('Notices')
- set_crumbs('Notices' => url_for)

- if @notices.present?
  = link_to "Send new Notice", new_notice_path, class: "btn btn-success"

  table.table.table-striped.table-hover
    thead
      tr
        th
        th Date
        th Policy
        th Opened
        th
    tbody
    - @notices.each do |notice|
      tr
        td
          - if notice.openings.present?
            - if notice.authorized
              span class="label label-success" Read
            - else
              span class="label label-warning" Failed
          - else
            span class="label label-default" Unread
        td= notice.created_at.to_s(:short)
        td= notice.created_at.to_s(:short)
        td= link_to "#{notice.openings.size} times", notice_openings_path(notice)
        td
          ul
            li= link_to 'Open', open_path(notice)
            li= link_to 'Share'
            li= button_to 'Delete', notice_path(notice), method: :delete
  = paginate @notices
- else
  .page-header
    h2 You are just <span class="text-success">3 simple steps</span> away from your first Burn-Notice!

  .row
    .col-lg-4.col-xs-4
      h3.text-center <span class="step smaller success-step1">1</span> draft it
    .col-lg-4.col-xs-4
      h3.text-center <span class="step smaller success-step2">2</span> secure it
    .col-lg-4.col-xs-4
      h3.text-center <span class="step smaller success-step3">3</span> share it
  .row.spacer-large
    .col-lg-12
      .progress
        .progress-bar.success-step1 style="width: 33.33%"
        .progress-bar.success-step2 style="width: 33.33%"
        .progress-bar.success-step3 style="width: 33.33%"

  .row
    .col-lg-12
      .well
        .pull-right= link_to 'create a new Burn-Notice', new_notice_path, class: 'btn btn-success btn-lg'
        p
          |
            Just follow the steps to create a new Burn-Notice.
            Every step has a couple of explanations, so you will know exactly what the step is for.
            Make sure to read the instructions, so your data is stored in our database with a strong password.
            This will make unauthorized access to your nearly impossible.
