- set_title('Notices')
- set_crumbs('Notices' => url_for)

- if @notices.present?
  .panel.panel-default
    .panel-heading
      .row
        .col-lg-6
          h2.panel-title
            | Manage your Burn-Noice history
        .col-lg-6
          .pull-right= link_to new_notice_path, class: 'btn btn-sm btn-default' do
            span.glyphicon.glyphicon-pencil.smaller'
            | create Burn-Notice
    table.table.table-striped.table-hover
      thead
        tr
          th= check_box_tag :select_all, '', false, onchange: "$('.select-all').prop('checked', $(this).prop('checked'))"
          th Status
          th Sent
          th Policy
          th Opened
          th
      tbody
      - @notices.each do |notice|
        tr
          td= check_box_tag "selected[]", notice.id, false, class: 'select-all'
          td
            - if notice.closed?
              span class="label label-primary" Burned
            - elsif notice.disabled?
              span class="label label-warning" Disabled
            - else
              span class="label label-success" Readable
          td= notice.created_at.to_s(:short)
          td= notice.policy.name.humanize
          td.openings
            - if notice.openings.present?
              = render 'opening_modal', notice: notice
              = link_to notice_openings_path(notice), "data-toggle" => "modal", "data-target" => "#opening_modal_#{notice.id}" do
                span.glyphicon.glyphicon-question-sign'
                span #{notice.openings.size} times
            - else
              span -
          td
            .btn-group
              button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"
                | Actions <span class="caret"></span>
              ul.dropdown-menu role="menu"
                - if notice.disabled?
                  li= link_to 'Enable', enable_notice_path(notice), method: :patch
                  li= link_to 'Burn', burn_notice_path(notice), method: :patch, data: {confirm: "This can't be undone!"}
                - elsif notice.open?
                  li= link_to 'Share', share_notice_path(notice)
                  li= link_to 'Disable', disable_notice_path(notice), method: :patch
                  li= link_to 'Burn', burn_notice_path(notice), method: :patch, data: {confirm: "This can't be undone!"}
                li= link_to 'Delete', notice_path(notice), method: :delete, data: {confirm: "This can't be undone!"}
    .panel-footer
      .row
        .col-lg-12
          .btn-group
            button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"
              | Bulk <span class="caret"></span>
            ul.dropdown-menu role="menu"
              li= link_to 'Enable', "", method: :patch
          .pull-right= link_to new_notice_path, class: 'btn btn-sm btn-default' do
            span.glyphicon.glyphicon-pencil.smaller'
            | create Burn-Notice
  .text-center
    = paginate @notices

- else
  .page-header
    h2 You are just <span class="text-success">3 simple steps</span> away from your first Burn-Notice!

  = render 'three_step'
  .row
    .col-lg-12
      .well
        .pull-right
          = link_to first_step_notices_path, class: 'btn btn-success btn-lg' do
            strong.step.success-step-button> 1
            span.text-error draft it
        p
          |
            Just follow the steps to create a new Burn-Notice.
            Every step has a couple of explanations, so you will know exactly what the step is for.
            Make sure to read the instructions, so your data is stored in our database with a strong password.
            This will make unauthorized access to your nearly impossible.
