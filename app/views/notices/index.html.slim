- set_title t('navigation.notices')
- set_crumbs t('navigation.notices') => url_for

= render 'activation_popup'

- if @notices.present?
  = form_tag bulk_notices_path, method: :post do
    .panel.panel-default
      .panel-heading
        .row
          .col-lg-6
            h2.panel-title.hidden-xs= t('notices.manage_your_history')
          .col-lg-6
            .pull-right= link_to new_notice_path, class: 'btn btn-sm btn-default', title: t('notices.draft_it') do
              span.glyphicon.glyphicon-pencil.smaller
      table.table.table-striped.table-hover
        thead
          tr
            th.hidden-xs= check_box_tag :select_all, '', false, onchange: "$('.select-all').prop('checked', $(this).prop('checked'))"
            th= t('notices.table_header.status')
            th= t('notices.table_header.sent')
            th.hidden-xs= t('notices.table_header.question')
            th= t('notices.table_header.policy')
            th.hidden-xs= t('notices.table_header.opened')
            th
        tbody
        - @notices.each do |notice|
          tr
            td.hidden-xs= check_box_tag "selected[]", notice.id, false, class: 'select-all'
            td
              - if notice.closed?
                span.visible-xs.label.label-primary.glyphicon.glyphicon-fire
                span.hidden-xs.label.label-primary= t('notices.burned')
              - elsif notice.disabled?
                span.visible-xs.label.label-warning.glyphicon.glyphicon-minus-sign
                span.hidden-xs.label.label-warning= t('notices.disabled')
              - else
                span.visible-xs.label.label-success.glyphicon.glyphicon-eye-open
                span.hidden-xs.label.label-success= t('notices.open')
            td= notice.created_at.to_s(:short)
            td= notice.question
            td
              - case notice.policy.name
              - when 'burn_after_reading'
                span.glyphicon.glyphicon-fire.smaller
                span.hidden-xs< after reading
              - when 'burn_after_time'
                span.glyphicon.glyphicon-time.smaller
                span.hidden-xs<= "#{notice.policy.duration} #{t('notices.day').pluralize(notice.policy.duration)}"
              - when 'burn_after_openings'
                span.glyphicon.glyphicon-asterisk.smaller
                span.hidden-xs<= t('notices.reads', count: notice.policy.amount)
            td.hidden-xs.openings
              - if notice.openings.present?
                = render 'opening_modal', notice: notice
                = link_to '#', "data-toggle" => "modal", "data-target" => "#opening_modal_#{notice.id}" do
                  span.glyphicon.glyphicon-th-list'
                  span= t('notices.times', count: notice.openings.size)
              - else
                span -
            td
              .btn-group
                button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"
                  | #{t('notices.actions')} <span class="caret"></span>
                ul.dropdown-menu role="menu"
                  - unless notice.closed?
                    li
                      = link_to open_path(notice), style: 'text-decoration: none'
                        span.glyphicon.glyphicon-eye-open.smaller'
                        span.margin-left-small= t('notices.read')
                  - if notice.disabled?
                    li
                      = link_to enable_notice_path(notice), method: :patch, style: 'text-decoration: none'
                        span.glyphicon.glyphicon-plus-sign.smaller'
                        span.margin-left-small= t('notices.enable')
                  - elsif notice.open?
                    li
                      = link_to share_notice_path(notice), style: 'text-decoration: none'
                        span.glyphicon.glyphicon-share.smaller'
                        span.margin-left-small= t('notices.share')
                    li
                      = link_to disable_notice_path(notice), method: :patch, style: 'text-decoration: none'
                        span.glyphicon.glyphicon-minus-sign.smaller'
                        span.margin-left-small= t('notices.disable')
                  li
                    = link_to notice_path(notice), method: :delete, data: {confirm: t('notices.confirm')}, style: 'text-decoration: none'
                      span.glyphicon.glyphicon-trash.smaller'
                      span.margin-left-small= t('notices.destroy')
      .panel-footer
        .row
          .col-lg-12
            .btn-group.hidden-xs
              button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"
                | #{t('notices.bulk')} <span class="caret"></span>
              ul.dropdown-menu role="menu"
                li
                  = link_to '#', onclick: "event.preventDefault(); $(this).closest('form').submit()", data: {confirm: t('notices.confirm')} do
                    span.glyphicon.glyphicon-trash.smaller'
                    span= t('notices.bulk_destroy')
            .pull-right= link_to new_notice_path, class: 'btn btn-sm btn-default', title: t('notices.draft_it') do
              span.glyphicon.glyphicon-pencil.smaller
  .text-center
    = paginate @notices

- else
  = render 'blank_slate'
